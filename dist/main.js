!function(){"use strict";!function(){const t=25,s=700,i=500,o=10,h="#96C5F7",e="#FFE66D",r="#FF6B6B",n="#104F55",a="#D17B0F",c="#9D8DF1",d=[[c,c,h,h,h,n,c,e,e,e],[c,c,h,h,n,n,c,e,e],[a,a,a,a,n,n,c,c,c,c],[a,a,a,a,c,c,c,c,c],[c,c,c,r,c,c,h,h,h,c],[c,c,c,r,r,c,h,h,h],[a,a,r,r,r,r,h,c,c,c],[a,a,r,c,r,r,c,c,c],[a,r,r,c,r,c,e,e,e,e],[a,r,c,c,r,c,e,e,e]];var l=class{constructor({coordinate:t,pos_x:s,pos_y:i,radius:o,color:h}){this.coordinate=t,this.pos_x=s,this.pos_y=i,this.radius=o,this.color=h}isOddRow(){return this.coordinate[0]%2==1}getNeighborCoords(){const t=this.coordinate;return(this.isOddRow()?[[-1,0],[-1,1],[0,-1],[0,1],[1,0],[1,1]]:[[-1,-1],[-1,0],[0,-1],[0,1],[1,-1],[1,0]]).map((s=>[s[0]+t[0],s[1]+t[1]]))}draw(t){t.fillStyle=this.color,t.beginPath(),t.arc(this.pos_x,this.pos_y,this.radius,0,2*Math.PI),t.fill(),t.fillStyle="#313638",t.stroke()}};document.addEventListener("DOMContentLoaded",(()=>{const h=document.getElementsByTagName("canvas")[0],e=new class{constructor(){this.width=i,this.height=s,this.FPS=o,this.init()}init(){const s=2*t,i=this.height/s-4,o=this.width/s;this.grid=new class{constructor({maxRows:t,maxCols:s,rows:i=[]}){this.rows=i||[],this.maxRows=t,this.maxCols=s,this.generateRows(),console.log(this.rows),console.log(this.checkNeighbors(this.rows[9][5]))}generateRows(){const s=t;let i=[];for(let t=0;t<this.rows.length;t++){const o=[];this.rows[t].forEach(((i,h)=>{const e=this.calcPos(t,h),r=new l({coordinate:[t,h],pos_x:e[0],pos_y:e[1],radius:s,color:i});o.push(r)})),i.push(o)}this.rows=i}calcPos(s,i){return[t*i*2+(s%2==1?2*t:t),t*s*2+t-6*s]}checkNeighbors(t){return t.getNeighborCoords().filter((t=>{const s=t[0],i=t[1];return s>=0&&s<this.maxRows&&i>=0&&i<this.maxCols&&this.rows[s][i]}))}draw(t){this.rows.forEach((s=>{s.forEach((s=>{s.draw(t)}))}))}}({maxRows:i,maxCols:o,rows:d})}draw(t){t.clearRect(0,0,this.width,this.height),t.fillStyle="#DDE1E4",t.fillRect(0,0,this.width,this.height),this.grid.draw(t)}};h.width=e.width,h.height=e.height;const r=h.getContext("2d");new class{constructor(t,s){this.ctx=s,this.game=t,this.lastTime=0,this.render=this.render.bind(this)}start(){this.render()}render(t){const s=t-this.lastTime;requestAnimationFrame(this.render),s>1e3/this.game.FPS&&(this.game.draw(this.ctx),this.lastTime=t)}}(e,r).start()}))}()}();
//# sourceMappingURL=main.js.map